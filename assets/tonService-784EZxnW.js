import{a1 as M,a5 as g,Y as A,dm as w,dn as T,dp as R,dq as b,dr as i,a2 as d,ds as h,dt as B,du as E,dv as k,dw as y,dx as q,dy as C}from"./index-z3CvngUh.js";import{E as S,c as _,a as O}from"./jettonService-hyWKbxlO.js";const N=e=>{if(!e)return;const{code:a,data:o}=d.loadStateInit(d.Cell.fromBase64(e).asSlice());return{code:a,data:o}},p=async(e,a,o,t,c,r,n)=>{const s=R(o),l=await s.createTransferAndSignRequestAsync({seqno:a,signer:n,timeout:b(e),sendMode:r?i.CARRY_ALL_REMAINING_BALANCE+i.IGNORE_ERRORS:i.PAY_GAS_SEPARATELY+i.IGNORE_ERRORS,messages:[d.internal({to:d.Address.parse(t.toAccount.address),bounce:C(t.toAccount,t.address),value:BigInt(c.toFixed(0)),body:t.comment!==""?t.comment:void 0})]});return B(s,a,l).toBoc()},v=async(e,a,o,t,c)=>{const r=R(o),n=await r.createTransferAndSignRequestAsync({seqno:a,signer:c,timeout:b(e),sendMode:i.PAY_GAS_SEPARATELY+i.IGNORE_ERRORS,messages:t.messages.map(s=>d.internal({to:d.Address.parse(s.address),bounce:h(s.address),value:BigInt(s.amount),init:N(s.stateInit),body:s.payload?d.Cell.fromBase64(s.payload):void 0}))});return B(r,a,n).toBoc({idx:!1})},x=async(e,a,o,t,c)=>{const r=await A(e),[n,s]=await w(e,a);c||T(n);const l=await p(r,s,a,o,t,c,E);return{event:await new S(e.tonApiV2).emulateMessageToAccountEvent({ignoreSignatureCheck:!0,accountId:n.address,decodeMessageRequest:{boc:l.toString("base64")}})}},Y=async(e,a,o)=>{const t=await new M(e.tonApiV2).getAccount({accountId:a.active.rawAddress});return o.messages.reduce((r,n)=>r.plus(n.amount),new g(0)).isGreaterThanOrEqualTo(t.balance)?{kind:"not-enough-balance"}:{kind:void 0}},P=async(e,a,o)=>{const t=await A(e),[c,r]=await w(e,a);T(c);const n=await v(t,r,a,o,E);return{event:await new S(e.tonApiV2).emulateMessageToAccountEvent({ignoreSignatureCheck:!0,accountId:c.address,decodeMessageRequest:{boc:n.toString("base64")}})}},V=async(e,a,o,t)=>{const c=await A(e),r=await k(e,a.active.rawAddress),s=(await v(c,r,a,o,t)).toString("base64");return await new y(e.tonApiV2).sendBlockchainMessage({sendBlockchainMessageRequest:{boc:s}}),s},W=async(e,a,o,t,c,r,n)=>{const s=await A(e),l=new g(r.event.extra).multipliedBy(-1).plus(t.weiAmount),[f,I]=await w(e,a);c||q(l,f);let u;const m=[s,I,a,o,t.weiAmount,c];n.type==="ledger"?u=await _(...m,n):n.type==="cell"?u=await p(...m,n):u=await O(...m,n),await new y(e.tonApiV2).sendBlockchainMessage({sendBlockchainMessageRequest:{boc:u.toString("base64")}})};export{x as a,W as b,P as e,V as s,Y as t};
